diff --git a/Makefile b/Makefile
index e6ae827..3ff969a 100644
--- a/Makefile
+++ b/Makefile
@@ -28,7 +28,8 @@ endif
 # Windows cross compilation from Linux
 #CONFIG_WIN32=y
 # use link time optimization (smaller and faster executables but slower build)
-CONFIG_LTO=y
+#-- disable LTO
+#CONFIG_LTO=y
 # consider warnings as errors (for development)
 #CONFIG_WERROR=y
 # force 32 bit build for some utilities
@@ -41,7 +42,9 @@ CONFIG_DEFAULT_AR=y
 endif
 
 # installation directory
-prefix=/usr/local
+#-- change prefix to /
+#prefix=/usr/local
+prefix=/
 
 # use the gprof profiler
 #CONFIG_PROFILE=y
@@ -86,7 +89,9 @@ ifdef CONFIG_CLANG
   endif
 else
   HOST_CC=gcc
-  CC=$(CROSS_PREFIX)gcc
+  #-- use musl-gcc instead of gcc (symlink must exist)
+  #CC=$(CROSS_PREFIX)gcc
+  CC=$(CURDIR)/musl-$(musl_arch)/bin/musl-gcc
   CFLAGS=-g -Wall -MMD -MF $(OBJDIR)/$(@F).d
   CFLAGS += -Wno-array-bounds -Wno-format-truncation
   ifdef CONFIG_LTO
@@ -100,6 +105,8 @@ ifdef CONFIG_WERROR
 CFLAGS+=-Werror
 endif
 DEFINES:=-D_GNU_SOURCE -DCONFIG_VERSION=\"$(shell cat VERSION)\"
+#-- define target architecture
+DEFINES+=-DMUSL_ARCH=\"$(musl_arch)\"
 ifdef CONFIG_BIGNUM
 DEFINES+=-DCONFIG_BIGNUM
 endif
@@ -113,6 +120,10 @@ CFLAGS_SMALL=$(CFLAGS) -Os
 CFLAGS_OPT=$(CFLAGS) -O2
 CFLAGS_NOLTO:=$(CFLAGS_OPT)
 LDFLAGS=-g
+#-- force static compilation
+LDFLAGS+=-static
+#-- disable PIE
+CFLAGS+=-no-pie
 ifdef CONFIG_LTO
 CFLAGS_SMALL+=-flto
 CFLAGS_OPT+=-flto
@@ -152,12 +163,17 @@ ifdef CONFIG_LTO
 PROGS+=libquickjs.lto.a
 endif
 
+#--when architecture is not 'x86_64', we need to use the 'x86_64' version of the 'qjsc' binary to generate c files
+QJSC_X86_64=$(qjsc_binary)
+
 # examples
 ifeq ($(CROSS_PREFIX),)
 ifdef CONFIG_ASAN
 PROGS+=
 else
-PROGS+=examples/hello examples/hello_module examples/test_fib
+#-- disable 'hello_module' & 'test_fib' examples because of cross-compilation
+#PROGS+=examples/hello examples/hello_module examples/test_fib
+PROGS+=examples/hello
 ifndef CONFIG_DARWIN
 PROGS+=examples/fib.so examples/point.so
 endif
@@ -180,6 +196,9 @@ ifndef CONFIG_WIN32
 LIBS+=-ldl -lpthread
 endif
 
+#-- static linking to libatomic (necessary for armv7l)
+LIBS+=-L $(CURDIR)/musl-$(musl_arch)/lib -latomic
+
 $(OBJDIR):
 	mkdir -p $(OBJDIR) $(OBJDIR)/examples $(OBJDIR)/tests
 
@@ -234,10 +253,12 @@ libquickjs.a: $(patsubst %.o, %.nolto.o, $(QJS_LIB_OBJS))
 endif # CONFIG_LTO
 
 repl.c: $(QJSC) repl.js
-	$(QJSC) -c -o $@ -m repl.js
+	#-- will use the 'x86_64' version of 'qjsc' when architecture is not 'x86_64'
+	$(QJSC_X86_64) -c -o $@ -m repl.js
 
 qjscalc.c: $(QJSC) qjscalc.js
-	$(QJSC) -fbignum -c -o $@ qjscalc.js
+	#-- will use the 'x86_64' version of 'qjsc' when architecture is not 'x86_64'
+	$(QJSC_X86_64) -fbignum -c -o $@ qjscalc.js
 
 ifneq ($(wildcard unicode/UnicodeData.txt),)
 $(OBJDIR)/libunicode.o $(OBJDIR)/libunicode.m32.o $(OBJDIR)/libunicode.m32s.o \
@@ -296,9 +317,12 @@ clean:
 	rm -rf $(OBJDIR)/ *.dSYM/ qjs-debug
 	rm -rf run-test262-debug run-test262-32
 
-install: all
+#-- only install
+#install: all
+install:
 	mkdir -p "$(DESTDIR)$(prefix)/bin"
-	$(STRIP) qjs qjsc
+	#-- disable stripping (because of cross-compiling)
+	#$(STRIP) qjs qjsc
 	install -m755 qjs qjsc "$(DESTDIR)$(prefix)/bin"
 	ln -sf qjs "$(DESTDIR)$(prefix)/bin/qjscalc"
 	mkdir -p "$(DESTDIR)$(prefix)/lib/quickjs"
@@ -322,7 +346,8 @@ HELLO_OPTS+=-fno-bigint
 endif
 
 hello.c: $(QJSC) $(HELLO_SRCS)
-	$(QJSC) -e $(HELLO_OPTS) -o $@ $(HELLO_SRCS)
+	#-- will use the 'x86_64' version of 'qjsc' when architecture is not 'x86_64'
+	$(QJSC_X86_64) -e $(HELLO_OPTS) -o $@ $(HELLO_SRCS)
 
 ifdef CONFIG_M32
 examples/hello: $(OBJDIR)/hello.m32s.o $(patsubst %.o, %.m32s.o, $(QJS_LIB_OBJS))
